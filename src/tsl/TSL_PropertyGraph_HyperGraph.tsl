/*
  In computer science, a property graph and a hypergraph are both models for representing complex data structures.

  A property graph is a graph data structure where nodes and edges can have properties (i.e., key-value pairs) associated 
  with them. Nodes represent entities or concepts, and edges represent the relationships between these entities. 
  In a property graph, edges can also be directed or undirected. This model is commonly used in graph databases 
  and is suitable for representing data with relatively simple relationships.

  On the other hand, a hypergraph is a more general model that allows for more complex relationships between entities. 
  In a hypergraph, an edge can connect more than two nodes, representing a higher-order relationship or a set of 
  relationships between nodes. For example, in a social network, a hyperedge could connect a group of people who all 
  attended the same event, whereas in a property graph, this relationship would be represented as a set of edges 
  connecting each person to the event node. Hypergraphs are often used in fields such as artificial intelligence, 
  machine learning, and data mining.

  In terms of TSL, both property graphs and hypergraphs can be represented using cells and edges. However, in a 
  property graph, nodes and edges would have properties associated with them, while in a hypergraph, cells could 
  have higher-order relationships with other cells. In either case, TSL provides a flexible and expressive language 
  for defining complex graph data structures.
*/

cell PropertyGraphNode
{
    CellId Id;
    list<PropertyValue> Properties;
    list<CellId> InEdges;
    list<CellId> OutEdges;
}

struct PropertyGraphEdge
{
    CellId Id;
    CellId Source;
    CellId Target;
    string Label;
}

cell PropertyValue
{
    string Name;
    any Value;
}

cell HyperGraphNode
{
    CellId Id;
    list<CellId> Nodes;
    list<CellId> Edges;
}

cell HyperGraphEdge
{
    CellId Id;
    list<CellId> Nodes;
}

